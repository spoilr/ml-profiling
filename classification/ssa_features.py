import sys
sys.path.insert(0, 'base/')
from mapping import *

proxy_all = [
'LifeNo',
'NoChIdeo',
'OUnk',
'Ed',
'YesImp',
'Violence',
'OUnk',
'UnkTarTyp',
'NoMil',
'NoChRel',
'Stock',
'Ins',
'Partner',
'Ch',
'LeftW',
'UnkRel',
'NoFin',
'UnkLocNat',
'FurtherAtt',
'WideGr',
'ServInd',
'YesIntRel',
'Subs',
'Claim',
'PropTarTyp',
'Reg',
'NoCol',
'CitLocNat',
'YesIntIdeo',
'Other',
'Adopt',
'NoIntRel',
'Bomb',
'RecruitNet',
'PNMarried',
'NoCrimConv',
'Unemp',
'Media',
'YesNoImp',
'Let',
'Prop',
'SingleEv',
'Virt',
'Prof',
'Legit',
'Obs',
'Inv',
'Dry',
'Hurt',
'PersS',
'AGr',
'LAKill',
'AId',
'Warn',
'Alone',
'Iso',
'Train',
'OtherKnow',
'PubPriv',
'Stress',
'InterNet',
'Single',
'Tip',
'Injust',
'NoIntIdeo',
'Mental',
'NoMilRej',
'Impl',
'SingleIs',
'Christian',
'ValCivil',
'Discr'
]

proxy_ideo = [
'Impl',
'Claim',
'UnkRel',
'Mental',
'LeftW',
'Hurt',
'NoIntIdeo',
'PersS',
'Iso',
'Single',
'NoChRel',
'LAKill',
'RecruitNet',
'LetPropTarTyp',
'FurtherAtt',
'AId',
'NoChIdeo',
'OtherInv',
'Dry',
'PNMarried',
'Subs',
'Stress',
'LifeNo',
'OUnk',
'ValCivil',
'Discr',
'Stock',
'AGr',
'Prof',
'Train',
'Fin',
'Warn',
'Reg',
'Adopt',
'Tip',
'InterNet',
'Bomb',
'UnkLocNat',
'NoMil',
'SingleEv',
'Ch',
'OtherKnow',
'Alone',
'Prop',
'Virt',
'UnkTarTyp',
'NoCrimConv',
'PubPriv',
'OUnkEd',
'Unemp',
'Christian',
'SingleIs'
]

proxy_ill = [
'Impl',
'Claim',
'Mental',
'Iso',
'PNMarried',
'Hurt',
'Single',
'PersS',
'Let',
'Reg',
'PropTarTyp',
'Dry',
'Adopt',
'Fin',
'LAKill',
'FurtherAtt',
'Stock',
'AGr',
'Warn',
'Tip',
'Discr',
'Alone',
'RecruitNet',
'AId',
'LifeNo',
'ValCivil',
'OtherInv',
'Train',
'Subs',
'Prof',
'Stress',
'OtherKnow',
'Unemp',
'Bomb',
'Virt',
'Prop',
'SingleEv',
'OUnk',
'UnkTarTyp',
'InterNet',
'NoCrimConv',
'OUnkEd'
]

proxy_net = [
'Subs',
'YesNoImp',
'Inv',
'Let',
'Media',
'Train',
'Alone',
'Stress',
'Unemp',
'Impl',
'FurtherAtt',
'RecruitNet',
'NoCrimConv',
'Reg',
'PropTarTyp',
'PNMarried',
'PersS',
'Adopt',
'Dry',
'Iso',
'OtherKnow',
'Mental',
'Virt',
'Prop',
'Hurt',
'Warn',
'AGr',
'AId',
'Single',
'SingleEv',
'LAKill',
'Tip',
'InterNet',
'ValCivil',
'Discr'
]

def get_decoded_features(proxy):
	decoded_features = []
	for x in proxy:
		if x in inv_mapping.keys():
			decoded_features.append(inv_mapping[x])
		else:
			decoded_features.append(inv_binary_convertor[x])
	return set(decoded_features)