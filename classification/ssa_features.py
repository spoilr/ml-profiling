import sys
sys.path.insert(0, 'base/')
from mapping import *

proxy_all = [
'LifeNo',
'NoChIdeo',
'PNMarried',
'Ins',
'Violence',
'PplTarTyp',
'Married',
'NoHS',
'WideGr',
'Ch',
'RightW',
'Subs',
'Christian',
'NoMil',
'NoChRel',
'NoFin',
'Claim',
'YesIntRel',
'YesIntIdeo',
'Bac',
'Reg',
'BothTarTyp',
'Bomb',
'Stock',
'GovLocNat',
'RecruitNet',
'NoCrimConv',
'PMarried',
'FurtherAtt',
'SingleEv',
'Bel',
'Other',
'YesNoImp',
'NoIntRel',
'Adopt',
'Media',
'Let',
'Unemp',
'Iso',
'Single',
'Prop',
'Virt',
'Legit',
'Prof',
'Obs',
'Dry',
'PersS',
'Alone',
'Hurt',
'AId',
'Tip',
'LAKill',
'AGr',
'Warn',
'Inv',
'PubPriv',
'Stress',
'Train',
'OtherKnow',
'Muslim',
'InterNet',
'Injust',
'NoIntIdeo',
'NoMilRej',
'Impl',
'Mental',
'Discr',
'Religious',
'ValCivil'
]

proxy_ideo = [
'Impl',
'Claim',
'Mental',
'NoIntIdeo',
'PersS',
'Single',
'Christian',
'RightW',
'RecruitNet',
'Hurt',
'NoChRel',
'LAKill',
'FurtherAtt',
'BothTarTyp',
'Let',
'Iso',
'OtherInv',
'Fin',
'Prof',
'NoChIdeo',
'AId',
'Dry',
'Stock',
'AGr',
'PMarried',
'Reg',
'Subs',
'Adopt',
'ValCivil',
'Warn',
'Discr',
'LifeNo',
'Tip',
'GovLocNat',
'PNMarried',
'Bomb',
'Stress',
'InterNet',
'Train',
'PubPriv',
'Alone',
'OtherKnow',
'Virt',
'NoCrimConv',
'PplTarTyp',
'Prop',
'SingleEv',
'NoMil',
'Ch',
'Unemp',
'NoHS',
'Muslim',
'Religious'
]

proxy_ill = [
'Impl',
'Mental',
'Iso',
'PMarried',
'BothTarTyp',
'Let',
'Claim',
'Single',
'Hurt',
'FurtherAtt',
'LAKill',
'PersS',
'Reg',
'RecruitNet',
'AId',
'Dry',
'Adopt',
'Alone',
'Stock',
'AGr',
'Warn',
'ValCivil',
'Discr',
'Tip',
'LifeNo',
'Virt',
'OtherInv',
'Fin',
'Prof',
'Train',
'Subs',
'Ch',
'InterNet',
'NoCrimConv',
'PNMarried',
'Stress',
'OtherKnow',
'Bomb',
'Prop',
'SingleEv',
'Unemp',
'NoHS',
'PplTarTyp'
]

proxy_net = [
'PNMarried',
'LifeNo',
'PplTarTyp',
'Ch',
'Subs',
'Reg',
'Claim',
'Bomb',
'Stock',
'NoFin',
'NoHS',
'BothTarTyp',
'RecruitNet',
'FurtherAtt',
'PMarried',
'YesNoImp',
'PersS',
'NoCrimConv',
'Single',
'SingleEv',
'Prop',
'Inv',
'Adopt',
'Dry',
'Virt',
'Hurt',
'Let',
'Media',
'Train',
'Unemp',
'Stress',
'Impl',
'Iso',
'AId',
'LAKill',
'OtherKnow',
'Tip',
'Warn',
'Mental',
'Alone',
'AGr',
'InterNet',
'ValCivil',
'Discr'
]

def get_decoded_features(proxy):
	decoded_features = []
	for x in proxy:
		if x in inv_mapping.keys():
			decoded_features.append(inv_mapping[x])
		else:
			decoded_features.append(inv_binary_convertor[x])
	return set(decoded_features)